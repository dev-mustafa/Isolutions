@model ISolutions.Portal.Models.Slide
@Scripts.Render("~/bundles/spectrum")

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Control.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Slides", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Slide</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                <div class="input-group">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="input-group-addon">
                        @Html.TextBoxFor(m => m.TitleColor)
                    </div>
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                <div class="input-group">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="input-group-addon">
                        @Html.TextBoxFor(m => m.ContentColor)
                    </div>
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                <input type="file" style="display:none" id="file" name="file" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-4">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $("#ContentColor").spectrum({
        preferredFormat: "hex",
        showButtons: false
    });
    $("#TitleColor").spectrum({
        preferredFormat: "hex",
        showButtons: false
    });
    $('#Image').click(function () {
        $('#file').click();
    })
    $('#file').change (function(e){
        $('#Image').val(this.files[0].name);
    })
</script>